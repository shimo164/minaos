name: Deploy to Firebase Hosting on merge and pull request
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: hosting
    env:
      FIREBASE_CLI_EXPERIMENTS: webframeworks # Enables deploying web fw using Firebase CLI
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_CLOUD_RUN_FUNCTION_URL: ${{ secrets.NEXT_PUBLIC_FIREBASE_CLOUD_RUN_FUNCTION_URL }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
      NEXT_PUBLIC_FIREBASE_WEB_APP_URL: ${{ secrets.NEXT_PUBLIC_FIREBASE_WEB_APP_URL }}
      NEXT_PUBLIC_FORBIDDEN_DOMAINS: ${{ secrets.NEXT_PUBLIC_FORBIDDEN_DOMAINS }}
      NEXT_PUBLIC_RECAPTCHA_SITE_KEY: ${{ secrets.NEXT_PUBLIC_RECAPTCHA_SITE_KEY }}
      NEXT_PUBLIC_ADMIN_MODE_PASSWORD: ${{ secrets.NEXT_PUBLIC_ADMIN_MODE_PASSWORD }}
      RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}
    steps:
      - uses: actions/checkout@v4

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: hosting/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('hosting/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Cache Firebase CLI
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('hosting/package-lock.json') }}

      - name: Deploy to Firebase Hosting
        if: github.event_name == 'push'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_MY_FIREBASE_PROJECT_60471 }}
          channelId: live
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
          firebaseToolsVersion: '14.5.0'
